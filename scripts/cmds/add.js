module.exports = {
  config: {
    name: "add",
    aliases: [],
    version: "1.2",
    author: "·¥Ä…¥…™·¥ã_üê¢",
    countDown: 2,
    role: 0,  // role changed to 0 so everyone can use
    shortDescription: {
      en: "·¥Ä·¥Ö·¥Ö ·¥Ä…¥ è·¥è…¥·¥á …™…¥ …¢ Ä·¥è·¥ú·¥ò"
    },
    longDescription: {
      en: " Ä·¥á·¥ò ü è ·¥õ·¥è ·¥Ä ·¥ç·¥áss·¥Ä…¢·¥á ·¥è Ä ·¥ò Ä·¥è·¥†…™·¥Ö·¥á ·¥ú…™·¥Ö ·¥õ·¥è ·¥Ä·¥Ö·¥Ö ·¥õ ú·¥á·¥ç …™…¥ …¢ Ä·¥è·¥ú·¥ò"
    },
    category: "…¢ Ä·¥è·¥ú·¥ò",
    guide: {
      en: "üß© | ·¥ús·¥Ä…¢·¥á:\n¬ª {pn} [·¥ú…™·¥Ö] ·¥è Ä  Ä·¥á·¥ò ü è ·¥õ·¥è ·¥Ä ·¥ç·¥áss·¥Ä…¢·¥á"
    }
  },

  onStart: async function ({ api, event, args }) {
    const threadID = event.threadID;
    let targetUID;

    if (args[0]) {
      targetUID = args[0];
    } else if (event.messageReply) {
      targetUID = event.messageReply.senderID;
    } else {
      return api.sendMessage("‚ö†Ô∏è |  Ä·¥á·¥ò ü è ·¥õ·¥è ·¥Ä ·¥ç·¥áss·¥Ä…¢·¥á ·¥è Ä ·¥ò Ä·¥è·¥†…™·¥Ö·¥á ·¥Ä ·¥ú…™·¥Ö  ô·¥èss!", threadID);
    }

    try {
      await api.addUserToGroup(targetUID, threadID);

      // ‡¶á‡¶â‡¶ú‡¶æ‡¶∞‡ßá‡¶∞ ‡¶®‡¶æ‡¶Æ ‡¶ì ‡¶Æ‡ßá‡¶®‡¶∂‡¶® ‡¶´‡¶∞‡¶Æ‡ßç‡¶Ø‡¶æ‡¶ü ‡¶§‡ßà‡¶∞‡¶ø
      const userInfo = await api.getUserInfo(targetUID);
      let userName = `@user`;
      if (userInfo && userInfo[targetUID] && userInfo[targetUID].name) {
        userName = userInfo[targetUID].name;
      }

      // ‡¶Æ‡ßá‡¶®‡¶∂‡¶® ‡¶∏‡¶π ‡¶Æ‡ßá‡¶∏‡ßá‡¶ú
      api.sendMessage({
        body: `‚úÖ | ${userName} ·¥Ä·¥Ö·¥Ö·¥á·¥Ö …™…¥ …¢ Ä·¥è·¥ú·¥ò!`,
        mentions: [{ tag: userName, id: targetUID }]
      }, threadID);

    } catch (err) {
      api.sendMessage(`‚ùå | ·¥Ñ·¥Ä…¥'·¥õ ·¥Ä·¥Ö·¥Ö ·¥õ ú·¥á ·¥ò·¥á Äs·¥è…¥  ô·¥èÍú±Íú± üò¢:\n${err.message}`, threadID);
    }
  }
};
